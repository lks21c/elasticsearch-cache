public CachePlan checkCachePlan(String interval, DateTime startDt, DateTime endDt) {
        CachePlan cachePlan = new CachePlan();
        if (interval != null) {
            int periodUnit = getPeriodUnit(interval, parseIntervalNum(interval));
            if (interval.contains("d") || interval.contains("h") || interval.contains("m")) {
                if ((interval.contains("d") && startDt.getMillisOfDay() == 0)
                        || (interval.contains("h") && startDt.getMinuteOfHour() == 0
                        && startDt.getSecondOfMinute() == 0
                        && startDt.getMillisOfSecond() == 0)
                        || (interval.contains("m") && startDt.getSecondOfMinute() == 0
                        && startDt.getMillisOfSecond() == 0)) { //pre range doesn't exist

                    cachePlan.setStartDt(startDt);
                } else { //pre range exists
                    DateTime newStartDt = startDt.plus(periodUnit).withTimeAtStartOfDay();
                    DateTime preStartDt = startDt;
                    DateTime preEndDt = newStartDt.minusMillis(1);
                    cachePlan.setPreStartDt(preStartDt);
                    cachePlan.setPreEndDt(preEndDt);
                    cachePlan.setStartDt(newStartDt);
                }

                if ((interval.contains("d") && endDt.getMillisOfDay() == new DateTime().withTimeAtStartOfDay().minusMillis(1).getMillisOfDay())
                        || (interval.contains("h") && endDt.getMinuteOfHour() == 59
                        && endDt.getSecondOfMinute() == 59
                        && endDt.getMillisOfSecond() == new DateTime().withTimeAtStartOfDay().minusMillis(1).getMillisOfDay())
                        || (interval.contains("m") && endDt.getSecondOfMinute() == 59
                        && endDt.getMillisOfSecond() == new DateTime().withTimeAtStartOfDay().minusMillis(1).getMillisOfSecond())) { //end range doesn't exist

                    cachePlan.setEndDt(endDt);
                } else { //end range exists
                    DateTime postStartDt = endDt.withTimeAtStartOfDay();
                    DateTime postEndDt = endDt;
                    DateTime newEndDt = postStartDt.minusMillis(1);
                    cachePlan.setPostStartDt(postStartDt);
                    cachePlan.setPostEndDt(postEndDt);
                    cachePlan.setEndDt(newEndDt);
                }
            }
        }
        return cachePlan;
    }